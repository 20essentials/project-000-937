class h{container;children;maxDisplacement;isVisible=!1;observer;constructor(s){const{containerSelector:e,childsSelector:t,maxDisplacement:r,visibilityThreshold:i=.1}=s;if(this.container=document.querySelector(e),!this.container)throw new Error(`El contenedor con selector "${e}" no fue encontrado.`);if(this.children=Array.from(this.container.querySelectorAll(t)),this.children.length===0)throw new Error(`No se encontraron elementos con el selector "${t}" dentro del contenedor.`);this.maxDisplacement=r,this.observer=new IntersectionObserver(([n])=>{this.isVisible=n.isIntersecting},{threshold:i,rootMargin:"0px 0px 0px 70%"}),this.observer.observe(this.container),this.initScrollListener()}initScrollListener(){window.addEventListener("scroll",this.handleScroll.bind(this),{passive:!0})}handleScroll(){if(!this.isVisible)return;const s=this.container.getBoundingClientRect().top,e=this.children.length;this.children.forEach((t,r)=>{const i=1+(1-r/(e-1))*.05,n=this.maxDisplacement*i,l=Math.max(Math.min(s*(r+1)/e,n),-n),o=parseFloat(t.style.transform.replace("translateY(","").replace("px)",""))||0,c=o+(l-o)*.1;t.style.transform=`translateY(${c}px)`})}}export{h as ParallaxEffect};
